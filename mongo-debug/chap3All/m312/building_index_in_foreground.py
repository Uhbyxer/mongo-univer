#!/usr/bin/env python
"""
Simulates an application for the lab, "Building an Index in the Foreground."

Usage:
    ./building_index_in_foreground.py [options]

Options:
    -h --help                   Show this text.
    -p, --port <port>           Port to use [default: 30000]
    -h, --host <host>           Hostname [default: localhost]
    -c, --collection <coll>     Name of the collection to use
                                    [default: employees]
    -d, --dbname <db>           Name of the database [default: m312]
"""
from base64 import b64decode as d;
code="""Cgpmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQpmcm9tIG11bHRpcHJvY2Vzc2luZyBpbXBvcnQgUHJvY2Vzcwpmcm9tIG9zIGltcG9ydCBzeXN0ZW0KZnJvbSB0aW1lIGltcG9ydCBzbGVlcAoKZnJvbSBkb2NvcHQgaW1wb3J0IGRvY29wdApmcm9tIHB5bW9uZ28gaW1wb3J0IEFTQ0VORElORywgTW9uZ29DbGllbnQsIGVycm9ycwoKCiMgSWYgeW91J3JlIHJlYWRpbmcgdGhyb3VnaCB0aGlzIHNjcmlwdCB0byBjaGVhdCwKIyB5b3UncmUgb25seSBjaGVhdGluZyB5b3Vyc2VsZi4KCmRlZiBpbmNyZW1lbnRfdmFsdWUoaG9zdCwgcG9ydCwgZGJuYW1lLCBjb2xsZWN0aW9uX25hbWUsIGZpZWxkPSdjb3VudGVyJywKICAgICAgICAgICAgICAgICAgICBieT0xLCBwcm9jZXNzX2NvdW50PU5vbmUpOgogICAgY2xpZW50ID0gTW9uZ29DbGllbnQoaG9zdD1ob3N0LCBwb3J0PXBvcnQsIHNvY2tldFRpbWVvdXRNUz0xMDAwKQogICAgZGIgPSBjbGllbnRbZGJuYW1lXQogICAgY29sbGVjdGlvbiA9IGRiW2NvbGxlY3Rpb25fbmFtZV0KICAgIGN1cnMgPSBjb2xsZWN0aW9uLmZpbmQoeydzc24nOiB7JyRleGlzdHMnOiBUcnVlfX0sIHsnX2lkJzogMX0pLmxpbWl0KDEwMDAwKQogICAgX2lkcyA9IFtkb2NbJ19pZCddIGZvciBkb2MgaW4gY3Vyc10KICAgIGZvciBfaWQgaW4gX2lkczoKICAgICAgICB0cnk6CiAgICAgICAgICAgIGNvbGxlY3Rpb24udXBkYXRlX29uZSh7J19pZCc6IF9pZH0sIHsnJGluYyc6IHtmaWVsZDogYnl9fSkKICAgICAgICBleGNlcHQgZXJyb3JzLk5ldHdvcmtUaW1lb3V0OgogICAgICAgICAgICBwYXNzCiAgICAgICAgc2xlZXAoMSkKCgpkZWYgcXVlcnlfZG9jdW1lbnRzKGhvc3QsIHBvcnQsIGRibmFtZSwgY29sbGVjdGlvbl9uYW1lKToKICAgIGNsaWVudCA9IE1vbmdvQ2xpZW50KGhvc3Q9aG9zdCwgcG9ydD1wb3J0LCBzb2NrZXRUaW1lb3V0TVM9MTAwMCkKICAgIGRiID0gY2xpZW50W2RibmFtZV0KICAgIGNvbGxlY3Rpb24gPSBkYltjb2xsZWN0aW9uX25hbWVdCiAgICBjdXJzID0gY29sbGVjdGlvbi5maW5kKHsnc3NuJzogeyckZXhpc3RzJzogVHJ1ZX19LCB7J19pZCc6IDF9KS5saW1pdCgxMDAwMCkKICAgIF9pZHMgPSBbZG9jWydfaWQnXSBmb3IgZG9jIGluIGN1cnNdCiAgICBmb3IgX2lkIGluIF9pZHM6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBjdXJzID0gY29sbGVjdGlvbi5maW5kKHsnX2lkJzogX2lkfSkKICAgICAgICAgICAgZG9jID0gY3Vycy5uZXh0KCkKICAgICAgICBleGNlcHQgZXJyb3JzLk5ldHdvcmtUaW1lb3V0OgogICAgICAgICAgICBwYXNzCiAgICAgICAgc2xlZXAoMSkKCgpkZWYgdW5zZXRfZmllbGQoY29sbGVjdGlvbiwgZmllbGQ9J2NvdW50Jyk6CiAgICBjb2xsZWN0aW9uLnVwZGF0ZV9tYW55KHt9LCB7JyR1bnNldCc6IHtmaWVsZDogMX19KQoKCmRlZiBtYWluKCk6CiAgICBvcHRzID0gZG9jb3B0KF9fZG9jX18pCiAgICBjbGllbnQgPSBNb25nb0NsaWVudChwb3J0PTMwMDAwKQogICAgaG9zdCA9IG9wdHNbJy0taG9zdCddCiAgICBwb3J0ID0gaW50KG9wdHNbJy0tcG9ydCddKQogICAgY29sbGVjdGlvbl9uYW1lID0gb3B0c1snLS1jb2xsZWN0aW9uJ10KICAgIGRibmFtZSA9IG9wdHNbJy0tZGJuYW1lJ10KICAgIGNsaWVudCA9IE1vbmdvQ2xpZW50KHBvcnQ9cG9ydCwgaG9zdD1ob3N0LCBzZXJ2ZXJTZWxlY3Rpb25UaW1lb3V0TVM9NTAwMCkKICAgIGRiID0gY2xpZW50W2RibmFtZV0KICAgIGNvbGxlY3Rpb24gPSBkYltjb2xsZWN0aW9uX25hbWVdCiAgICB0cnk6CiAgICAgICAgY29sbF9jb3VudCA9IGNvbGxlY3Rpb24uY291bnQoKQogICAgZXhjZXB0IGVycm9ycy5TZXJ2ZXJTZWxlY3Rpb25UaW1lb3V0RXJyb3I6CiAgICAgICAgcHJpbnQoIkdvdCBhIFNlcnZlclNlbGVjdGlvblRpbWVvdXRFcnJvciB3aGlsZSB0cnlpbmcgdG8gcXVlcnkgYSAiICsKICAgICAgICAgICAgICAic2VydmVyIGF0ICd7aG9zdH06e3BvcnR9Jy5cbiIuZm9ybWF0KGhvc3Q9aG9zdCwgcG9ydD1wb3J0KSArCiAgICAgICAgICAgICAgIiAgTW9zdCBsaWtlbHksIHRoZXJlJ3Mgbm8gc2VydmVyIGxpc3RlbmluZyBvbiB0aGF0IHBvcnQuXG4iICsKICAgICAgICAgICAgICAiICBBcmUgeW91IHN1cmUgdGhpcyBzY3JpcHQgaXMgcG9pbnRlZCB0byBhbiBhY3RpdmUgc2VydmVyPyBcbiIgKwogICAgICAgICAgICAgICIgIFlvdSBjYW4gdXNlIC0taGVscCBmb3IgbW9yZSBpbmZvcm1hdGlvbi4iKQogICAgICAgIGV4aXQoKQogICAgaWYgY29sbF9jb3VudCA9PSAyODg4MjY4OgogICAgICAgIHByaW50ICJMb29rcyBsaWtlIHRoZSBlbXBsb3llZXMgY29sbGVjdGlvbiBpcyBhbHJlYWR5IHByZXNlbnQuIgogICAgICAgIHByaW50ICIgIE5vdCBnb2luZyB0byByZS1pbXBvcnQgaXQuIiwKICAgIGVsc2U6CiAgICAgICAgcHJpbnQgIkkgZG9uJ3Qgc2VlIHRoZSBlbXBsb3llZXMgY29sbGVjdGlvbi4gSW1wb3J0aW5nIGl0LiAiLAogICAgICAgIHByaW50ICJUaGlzIG1heSB0YWtlIGEgYml0IG9mIHRpbWUuIgogICAgICAgIGJhc2hfY29tbWFuZCA9ICgibW9uZ29pbXBvcnQgLWQge2RibmFtZX0gLWMge2NvbGxuYW1lfSAtLWRyb3AgIiArCiAgICAgICAgICAgICAgICAgICAgICAgICItLWhvc3Qge2hvc3R9IC0tcG9ydCB7cG9ydH0gZW1wbG95ZWVzLmpzb24iCiAgICAgICAgICAgICAgICAgICAgICAgICkuZm9ybWF0KGRibmFtZT1kYm5hbWUsIGNvbGxuYW1lPWNvbGxlY3Rpb25fbmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaG9zdD1ob3N0LCBwb3J0PXBvcnQpCiAgICAgICAgcHJpbnQgKCJDYWxsaW5nOlxuICAiICsKICAgICAgICAgICAgICAgIntiYXNoX2NvbW1hbmR9IG5vdyIuZm9ybWF0KGJhc2hfY29tbWFuZD1iYXNoX2NvbW1hbmQpKQogICAgICAgIHN5c3RlbShiYXNoX2NvbW1hbmQpCiAgICAgICAgcHJpbnQgIk9LLCBkb25lIGltcG9ydGluZyBlbXBsb3llZXMgYW5kIGNvbXBhbmllcy4gIiwKCiAgICBwcmludCAiRHJvcHBpbmcgaW5kZXhlcy4uLiIsCiAgICBjb2xsZWN0aW9uLmRyb3BfaW5kZXhlcygpCiAgICBwcmludCAiIGRvbmUuIgogICAgcHJpbnQgIlNwYXduaW5nIGEgc2V0IG9mIHByb2Nlc3NlcyB0byBkbyBsb3RzIG9mIHJlYWRzIGFuZCB3cml0ZXMgd2hpbGUgSSIsCiAgICBwcmludCAoImNyZWF0ZSBhbiBpbmRleC4gVGhlIHByb2Nlc3NlcyB3aWxsIHNpbXVsYXRlIHlvdXIgbWFueSAiICsKICAgICAgICAgICAiYXBwbGljYXRpb24gY2xpZW50cy4iKQogICAgcHJvY2Vzc2VzID0gW10KICAgIGZvciBpIGluIHhyYW5nZSgxMCk6CiAgICAgICAgdyA9IFByb2Nlc3ModGFyZ2V0PWluY3JlbWVudF92YWx1ZSwKICAgICAgICAgICAgICAgICAgICBhcmdzPShob3N0LCBwb3J0LCBkYm5hbWUsIGNvbGxlY3Rpb25fbmFtZSksCiAgICAgICAgICAgICAgICAgICAga3dhcmdzPXsiZmllbGQiOiAiY291bnQiLCAiYnkiOiAxLCAicHJvY2Vzc19jb3VudCI6IGl9KQogICAgICAgIHByb2Nlc3Nlcy5hcHBlbmQodykKICAgICAgICByID0gUHJvY2Vzcyh0YXJnZXQ9cXVlcnlfZG9jdW1lbnRzLAogICAgICAgICAgICAgICAgICAgIGFyZ3M9KGhvc3QsIHBvcnQsIGRibmFtZSwgY29sbGVjdGlvbl9uYW1lKSkKICAgICAgICBwcm9jZXNzZXMuYXBwZW5kKHIpCiAgICAgICAgdy5zdGFydCgpCiAgICAgICAgc2xlZXAoMC4wNSkgICMgRG9uJ3Qgc3RhcnQgdGhlbSBhbGwgYXQgb25jZS4KICAgICAgICByLnN0YXJ0KCkKICAgICAgICBzbGVlcCgwLjA1KQogICAgc2xlZXAoNSkKICAgIHByaW50ICIgIC4uLiBvay4gV2hpbGUgeW91ciAnYXBwbGljYXRpb24nIGNsaWVudHMgYXJlIHJ1bm5pbmcsIEknbSIsCiAgICBwcmludCAiZ29pbmcgdG8gY3JlYXRlIGFuIGluZGV4IG9uIHtsYXN0X25hbWU6IDEsIGZpcnN0X25hbWU6IDF9LiIKICAgIHNsZWVwKDMpCiAgICBjb2xsZWN0aW9uLmNyZWF0ZV9pbmRleChbKCJsYXN0X25hbWUiLCBBU0NFTkRJTkcpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICgiZmlyc3RfbmFtZSIsIEFTQ0VORElORyldKQogICAgc2xlZXAoMTApCiAgICBmb3IgcCBpbiBwcm9jZXNzZXM6CiAgICAgICAgaWYgcC5pc19hbGl2ZSgpOgogICAgICAgICAgICBwLnRlcm1pbmF0ZSgpCiAgICBzbGVlcCgxKQogICAgcHJpbnQgIiAgLi4uIG9rLCBkb25lLiIKICAgIHByaW50ICgiWW91ciBsb2cgZmlsZXMgc2hvdWxkIGJlIHJlYWR5IGZvciB5b3UgdG8gbG9vayBhdCEiKQoKCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICBtYWluKCkK"""
eval(compile(d(code), "<string>", 'exec'))
